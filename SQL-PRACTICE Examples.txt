##### THIS ARE THE EXERCISES FROM THE PAGE https://www.sql-practice.com/ #####

-- Show first name, last name, and gender of patients who's gender is 'M'

SELECT
 first_name,
 last_name,
 gender

FROM
  patients

WHERE 
  gender = "M"

-- Show first name and last name of patients who does not have allergies (null).

SELECT
 first_name,
 last_name

FROM
  patients

WHERE 
  allergies is NULL

-- Show first name of patients that start with the letter 'C'

SELECT
 first_name
 
FROM
  patients

WHERE 
first_name LIKE 'C%'

-- Show first name and last name of patients that weight within the range of 100 to 120 (inclusive)

SELECT
 first_name,
 last_name
 
FROM
  patients

WHERE 
weight BETWEEN 100 and 120

-- Update the patients table for the allergies column. If the patient's allergies is null then replace it with 'NKA'

UPDATE patients SET allergies = "NKA"
WHERE allergies is NULL

-- Show first name and last name concatinated into one column to show their full name.

SELECT
  CONCAT(first_name," ",last_name) AS full_name

FROM
  patients

-- Show first name, last name, and the full province name of each patient.

SELECT
  patients.first_name,
  patients.last_name,
  provinces.province_name
 
FROM
  patients
LEFT JOIN provinces
ON patients.province_id = provinces.province_id

-- Show how many patients have a birth_date with 2010 as the birth year.

SELECT
  Count(birth_date) as total_patiens

FROM 
  patients

WHERE
  YEAR(birth_date) = 2010

-- Show the first_name, last_name, and height of the patient with the greatest height.

SELECT
 first_name,
 last_name,
 MAX(height)
 
FROM 
  patients

-- Show all columns for patients who have one of the following patient_ids:
   1,45,534,879,1000

SELECT *
 
FROM 
  patients

WHERE
 patient_id IN (1,45,534,879,1000)

-- Show the total number of admissions

SELECT COUNT(*)
 
FROM 
  admissions

-- Show unique birth years from patients and order them by ascending.

SELECT
  DISTINCT YEAR(birth_date) as birth_year
  
FROM
  patients

ORDER BY birth_year ASC

-- Show unique first names from the patients table which only occurs once in the list.

SELECT
  first_name
  
FROM
  patients
  
GROUP BY
  first_name

Having
  COUNT(first_name) = 1

-- Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.

SELECT
  patient_id,
  first_name
  
FROM
  patients

WHERE first_name LIKE "s_%_%_%_%s" 

-- Show patient_id, first_name, last_name from patients whos primary_diagnosis is 'Dementia'.
(Primary diagnosis is stored in the admissions table.)

SELECT
  patients.patient_id,
  patients.first_name,
  patients.last_name
  
FROM
  patients
LEFT JOIN admissions
On patients.patient_id = admissions.patient_id

WHERE 
  admissions.primary_diagnosis  = "Dementia"

-- Show patient_id, first_name, last_name from the patients table.
Order the rows by the first_name ascending and then by the last_name descending.

SELECT
  patient_id,
  first_name,
  last_name
  
FROM
  patients
  
ORDER BY first_name ASC, last_name DESC

-- Show the total amount of male patients and the total amount of female patients in the patients table

SELECT
  (select COUNT(gender) 
  FROM patients
  WHERE gender = "M") AS male_count,
  (select COUNT(gender) 
  FROM patients
  WHERE gender = "F") AS female_count

-- Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. Show results ordered ascending by allergies then by first_name then by last_name.

SELECT
 first_name,
 last_name,
 allergies
 
FROM
  patients

WHERE
  allergies IN ("Penicillin", "Morphine")
  
ORDER BY allergies, first_name, last_name ASC

-- Show patient_id, primary_diagnosis from admissions. Find patients admitted multiple times for the same primary_diagnosis.

SELECT
  patient_id,
  primary_diagnosis
  
FROM
  admissions


GROUP BY patient_id, primary_diagnosis

Having COUNT
  (primary_diagnosis) > 1

-- Show the city and the total number of patients in the city in the order from most to least patients.

SELECT
  city,
  COUNT(city) as num_patients
  
FROM
  patients

Group BY city

Order by num_patients DESC

-- Show first name, last name and role of every person that is either patient or physician.
The roles are either "Patient" or "Physician"

SELECT first_name,last_name, "Patient" AS Role FROM patients
    UNION 
SELECT first_name,last_name, "Physician" AS ROLE FROM physicians

-- Show all allergies ordered by popularity. Remove 'NKA' and NULL values from query.

SELECT
 allergies,
 COUNT(allergies) AS total_diagnosis
FROM
 patients

where allergies NOT IN ("NKA") OR NOT NULL

Group by allergies

Order by total_diagnosis DESC

-- Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. Sort the list starting from the earliest birth_date.

SELECT
  first_name,
  last_name,
  birth_date

FROM
  patients

WHERE birth_date BETWEEN "1970-01-01" AND "1979-12-31"
ORDER BY birth_date

-- Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade.
   Sort the list starting from the earliest birth_date.

SELECT
  CONCAT(UPPER(last_name),",",LOWER(first_name)) AS new_name_format
         
FROM
  patients
  
ORDER BY first_name DESC

-- Show the cities where the patient's average weight, rounded-up, is less than 70kg.
   Sort the list by highest to lowest avg_weight.

SELECT
  city,
  CEIL(AVG(weight)) AS avg_weight
         
FROM
  patients

GROUP BY city

HAVING avg_weight < 70

ORDER BY avg_weight DESC

-- Show the province_id(s), sum of height; where the total sum of its 
   patient's height is greater than or equal to 7,000.

SELECT
  province_id,
  SUM(height) AS sum_height
         
FROM
  patients

GROUP BY province_id

HAVING sum_height >= 7000

-- Show the difference between the largest weight 
   and smallest weight for patients with the last name 'Maroni'

SELECT
 (MAX(weight) - MIN(weight)) AS weight_delta

FROM
  patients

WHERE 
last_name = "Maroni"

-- Based on the cities that our patients live in, show unique cities that are in province_id 'NS'?

SELECT
 DISTINCT city

FROM
  patients

WHERE 
province_id = "NS"

-- Show all of the patients grouped into weight groups.
Show the total amount of patients in each weight group.
Order the list by the weight group decending.

For example, if they weight 100 to 109 they are placed in the 100 weight group,
 110-119 = 110 weight group, etc.

CREATE Table bins AS
SELECT weight,
 CASE
  when weight >= 0 ANd weight < 10 THEN 0
  when weight >= 10 ANd weight < 20 THEN 10
  when weight >= 20 ANd weight < 30 THEN 20
  when weight >= 30 ANd weight < 40 THEN 30
  when weight >= 40 ANd weight < 50 THEN 40
  when weight >= 50 ANd weight < 60 THEN 50
  when weight >= 60 ANd weight < 70 THEN 60
  when weight >= 70 ANd weight < 80 THEN 70
  when weight >= 80 ANd weight < 90 THEN 80
  when weight >= 90 ANd weight < 100 THEN 90
  when weight >= 100 ANd weight < 110 THEN 100
  when weight >= 110 ANd weight < 120 THEN 110
  when weight >= 120 ANd weight < 130 THEN 120
  ELSE 130
 end as weight_groups
FROM patients;

SELECT 
COUNT(weight_groups) AS patient_in_groups,
weight_groups
  
from bins

GROUP BY weight_groups

ORDER BY weight_groups DESC

-- Show patient_id, weight, height, isObese from the patients table.
   Display isObese as a boolean 0 or 1.Obese is defined as weight(kg)/(height(m)2) >= 30.
   weight is in units kg. height is in units cm.

SELECT
  patient_id,
  weight,
  height,
  CASE 
  when weight/POWER((height*0.01),2) >=30 THEN 1
  ELSE 0
  END AS isObese
  
FROM patients

-- Show patient_id, first_name, last_name, and attending physician's specialty.
   Show only the patients who has a primary_diagnosis as 'Dementia' and the physician's first name is 'Lisa'
   Check patients, admissions, and physicians tables for required information.

CREATE TABLE lisa AS
SELECT physician_id
FROM physicians
WHERE first_name = "Lisa";

SELECT
 ps.patient_id,
 ps.first_name,
 ps.last_name,
 (Select specialty
 FROM physicians
 WHERE first_name = "Lisa")	AS attending_physician_specilaty
 
FROM patients AS ps
JOIN admissions AS ad
ON ps.patient_id = ad.patient_id

WHERE ad.primary_diagnosis = "Dementia" AND
      ad.attending_physician_id in lisa;

*** Correct way to do it ***(
    SELECT p.patient_id, p.first_name as patient_first_name, p.last_name as patient_last_name, ph.specialty as attending_physician_specialty FROM patients p
  JOIN admissions a ON a.patient_id = p.patient_id
  JOIN physicians ph ON ph.physician_id = a.attending_physician_id
  WHERE primary_diagnosis = 'Dementia' AND ph.first_name = 'Lisa';
)

--- Each admission costs $50 for patients without insurance, and $10 for patients with insurance.
    All patients with an even patient_id have insurance.
    Give each patient a 'Yes' if they have insurance, and a 'No' if they don't have insurance.
    Add up the admission_total cost for each has_insurance group.

CREATE TABLE to_sum AS
SELECT
 CASE WHEN patient_id % 2 = 0 THEN "Yes"
 ELSE "No" END AS has_insurance,
 (SELECT
 CASE WHEN patient_id % 2 = 0 THEN 10
 ELSE 50 end) AS cost_after_insurance 
FROM admissions;
 
SELECT
has_insurance,
SUM(cost_after_insurance)
FROM to_sum
GROUP BY has_insurance

*** Correct way to do it *** 
(SELECT 
CASE WHEN patient_id % 2 = 0 Then 
    'Yes'
ELSE 
    'No' 
END as has_insurance,
SUM(CASE WHEN patient_id % 2 = 0 Then 
    10
ELSE 
    50 
END) as cost_after_insurance
FROM admissions 
GROUP BY has_insurance)

--- All patients who have gone through admissions, can see their medical documents on our site. Those patients are given a temporary password after their first admission. Show the patient_id and temp_password.

    The password must be the following, in order:
    1. patient_id
    2. the numerical length of patient's last_name
    3. year of patient's birth_date

SELECT
DISTINCT ps.patient_id,
concat((ps.patient_id),len(ps.last_name),year(ps.birth_date)) AS temp_password
FROM patients AS ps
JOIN admissions as ad
ON ad.patient_id = ps.patient_id

-- We are looking for a specific patient. Pull all columns for the patient who matches the following criteria:
     First_name contains an 'r' after the first two letters.
     Identifies their gender as 'F'
     Born in February, May, or December
     Their weight would be between 60kg and 80kg
     Their patient_id is an odd number
     They are from the city 'Halifax

SELECT *
FROM patients
WHERE gender = "F"
 AND city = "Halifax"
 AND patient_id % 2 <> 0
 AND MONTH(birth_date) IN (2,5,12)
 AND first_name LIKE "__r%"
 AND weight BETWEEN 60 AND 80

-- Show the provinces that has more patients identified as 'M' than 'F'.
   Must only show full province_name

CREATE TABLE Table_complete AS
SELECT
pr.province_name,
SUM(ps.gender = "F") AS F,
SUM(ps.gender = "M") AS M
FROM patients as ps
JOIN provinces AS pr
ON pr.province_id = ps.province_id
GROUP BY pr.province_id
HAVING M > F;

SELECT province_name
FROM Table_complete

*** Correct way to do it ***
(SELECT
pr.province_name
FROM
patients as pa
JOIN
provinces as pr
ON
pa.province_id = pr.province_id
GROUP BY
pr.province_name
HAVING
COUNT(CASE WHEN gender = 'M' THEN 1 END) > COUNT(CASE WHEN gender = 'F' THEN 1 END))

-- Show the percent of patients that have 'M' as their gender.
 Round the answer to the nearest hundreth number and in percent form.

SELECT
CONCAT(ROUND((SELECT COUNT(*) FROM patients WHERE gender = 'M')/(CAST(COUNT(*) AS float))*100,2),"%")
FROM patients